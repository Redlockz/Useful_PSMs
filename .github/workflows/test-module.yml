# This is a basic workflow to help you get started with Actions

name: CI PSScriptAnalyzer

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Test-PSModule:
    name: Test-PSModule
    runs-on: 	windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Initialize environment
        uses: PSModule/Initialize-PSModule@main

      - name: Test-PSModule
        run: pwsh -NoProfile -NoLogo -Command "Invoke-ScriptAnalyzer -ExcludeRule PSAvoidUsingWriteHost,PSAvoidUsingPositionalParameters,PSUseSingularNouns,PSUseShouldProcessForStateChangingFunctions -EnableExit -Path Update-Repositories\Update-Repositories.psm1"

      - name: Pester-Test
        shell: pwsh
        run: |
          $config = New-PesterConfiguration
          $config.Run.Path = ".\Tests"
          $config.CodeCoverage.Enabled = $true
          $config.CodeCoverage.Path = ".\Update-Repositories"
          $config.Output.Verbosity = "Diagnostic"
          $config.Output.StackTraceVerbosity = "Full"
          $config.Output.WriteDebugMessages = "true"
          Invoke-Pester -Configuration $config -Verbose

      - name: Publish results
        uses: actions/upload-artifact@v4
        with:
          name: Coverage
          path: '*.xml'
          overwrite: true

  Build-Code:
    needs: Test-PSModule
    name: Build-Code
    runs-on: 	windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Initialize environment
        uses: PSModule/Initialize-PSModule@main
